@{
    Dictionary<string, List<string>> lstSymtompsFaculty = new Dictionary<string, List<string>>();
    List<string> lstSymptons = new List<string>();
    // Truyền data ra ngoài layout
    List<BELibrary.Entity.Room> rooms = new List<BELibrary.Entity.Room>();

    using (var workScope = new BELibrary.Core.Entity.UnitOfWork(new BELibrary.DbContext.HospitalManagementDbContext(lstSymtompsFaculty, lstSymptons)))
    {
        rooms = workScope.Rooms.GetAll()
            .ToList();
    }

    ViewBag.GlobalRooms = new SelectList(rooms, "Id", "Description");

    ViewBag.LstSymptoms = lstSymtompsFaculty;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Quản lý bệnh nhân</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">

    <link href="~/Content/theme/img/favicon.png" rel="icon">

    <link rel="stylesheet" href="~/Content/theme/css/bootstrap.min.css">

    <link rel="stylesheet" href="~/Content/theme/plugins/fontawesome/css/fontawesome.min.css">
    <link rel="stylesheet" href="~/Content/theme/plugins/fontawesome/css/all.min.css">

    <link href="~/Content/alertify/alertify.min.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/Content/theme/css/style.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.min.css">

    <link href="~/Content/plugin/notifyjs/lobibox.min.css" rel="stylesheet" />
    @RenderSection("CSS", required: false)
    <!--[if lt IE 9]>
                <script src="~/Content/theme/js/html5shiv.min.js"></script>
                <script src="~/Content/theme/js/respond.min.js"></script>
    <![endif]-->


    <style>

        .Scroll-up {
            font-size: 30px;
            color: #03a9f4;
            background-color: #f8f8f8;
            width: 45px;
            height: 45px;
            text-align: center;
            border-radius: 50px;
            position: fixed;
            right: 20px;
            bottom: 10px;
            z-index: 9999;
            cursor: pointer;
            border: 2px solid #03a9f4;
            display: none;
        }

        select#medical-description {
            width: 100%;
            padding: .8rem;
        }

        .amount {
            display: flex;
        }

            .amount label {
                margin: auto;
                font-size: 5rem;
            }

        .checkbox__re-examination {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: .3rem 1rem;
            border: .1rem solid #dbdbdb;
        }

            .checkbox__re-examination input:hover {
                cursor: pointer
            }


        .btn-primary.disabled, .btn-primary:disabled {
            background-color: #80a59c !important;
            border-color: #88aca2 !important;
        }
    </style>
</head>
<body>

    <div class="main-wrapper">
        <!-- Header -->
        @Html.Partial("_PartialHeader")

        <!-- Start main-content -->

        @RenderBody()

        <div class="clearfix"></div>
        <!-- Footer -->
        @Html.Partial("_PartialFooter")
    </div>

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel2">ĐẶT LỊCH KHÁM BỆNH</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close" data-original-title="" title=""><span aria-hidden="true">×</span></button>
                </div>
                <div class="modal-body">

                    <div class="card">
                        <div class="card-body">
                            <div class="booking-doc-info">
                                <a href="" class="booking-doc-img link-to-detail-doctor">
                                    <img src="" id="ImgAvt" alt="User Image">
                                </a>
                                <div class="booking-info">
                                    <h4><a href="" class="link-to-detail-doctor" id="doctor-name">Tiến sĩ Darren Elder</a></h4>
                                    <div class="rating">
                                        <i class="fas fa-star filled"></i>
                                        <i class="fas fa-star filled"></i>
                                        <i class="fas fa-star filled"></i>
                                        <i class="fas fa-star filled"></i>
                                        <i class="fas fa-star"></i>
                                        <span class="d-inline-block average-rating">4</span>
                                    </div>
                                    <p class="text-muted mb-0"><i class="fas fa-map-marker-alt"></i> <span id="doctor-address"></span></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <form id="form-book-doctor">
                        <div class="form-group">
                            <input type="hidden" value="" id="doctor-id" name="doctorId" />
                            <label class="col-form-label">Thời gian:</label>
                            <input class="form-control" name="time" type="datetime-local" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" data-original-title="" title="">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal" data-original-title="" title="">Đóng</button>
                    <button id="saveBooking" class="btn btn-primary" type="button" data-original-title="" onclick="saveBooking()" title="">Đăng ký ngay</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="pickNumber" tabindex="-1" role="dialog" aria-labelledby="pickNumberLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="pickNumberLabel2">BỐC SỐ KHÁM BỆNH</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close" data-original-title="" title=""><span aria-hidden="true">×</span></button>
                </div>
                <div class="modal-body">
                    <form id="form-pick-number">
                        <div class="form-group">
                            <label class="col-form-label">Thời gian:</label>
                            <input readonly class="form-control" name="StartTime" type="datetime-local" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" data-original-title="" title="">
                        </div>

                        <div class="form-group checkbox__re-examination">
                            <label class="col-form-label">Tái khám: </label>
                            <input type="checkbox" id="revisitCheckbox" style="width: 1.2rem; height: 2rem" />
                        </div>

                        <div class="form-group amount">
                            <label class="col-form-label next-number" id="nextNumberLabel"></label>
                        </div>

                        <div class="form-group examination" style="display: none">
                            <label for="PatientFacultyDropdown" class="form-label">Chọn khoa tái khám:</label>
                            <select class="form-select" id="PatientFacultyDropdown" name="facultyId" aria-label="Chọn khoa tái khám" style="padding: .8rem 1rem; width: 100%;">
                                <option value="">Chọn khoa tái khám</option>
                            </select>
                        </div>



                        <div class="form-group">
                            <label for="medical-description" class="form-label">Triệu chứng bệnh:</label>
                            <select class="form-select" id="symptomsDropdown" name="symptoms" aria-label="Mô tả bệnh án" style=" padding: .8rem 1rem; width: 100%;">
                                <option value="">Chọn triệu chứng</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Khoa phụ trách:</label>
                            <div id="selectedFaculty" class="form-control" readonly style="background-color: #f9f9f9;"></div>
                        </div>

                        <div class="form-group">
                            <label>Phòng khám:</label>
                            <div id="availableRooms" class="form-control" readonly style="background-color: #f9f9f9;"></div>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal" data-original-title="" title="">Đóng</button>
                    <button id="savePickNumber" class="btn btn-primary" type="button" data-original-title="" onclick="savePickNumber()" title="">Lấy số thứ tự</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Start Button Scroll UP -->
    <div class="Scroll-up">
        <i class="fa fa-stethoscope" aria-hidden="true"></i>
    </div>
    <script src="~/Content/theme/js/jquery.min.js"></script>
    <script src="~/Content/theme/js/jquery.min.js"></script>

    <script src="~/Content/theme/js/popper.min.js"></script>
    <script src="~/Content/theme/js/bootstrap.min.js"></script>

    <script src="~/Content/plugin/notifyjs/lobibox.min.js"></script>

    <script src="~/Scripts/js/base/common.js"></script>

    <script src="~/Areas/Admin/Content/js/base/ajax.js"></script>

    <script src="~/Scripts/alertify.min.js"></script>
    @RenderSection("Scripts", required: false)

    <script type="text/javascript">
        var scrollButton = $(".Scroll-up");
        $(window).on("scroll", function () {
            if ($(this).scrollTop() >= 500) {
                scrollButton.show();
            } else {
                scrollButton.hide();
            }
        });
        scrollButton.on("click",
            function () {
                $("html,body").animate({
                    scrollTop: 0
                },
                    1e3);
            });

        function getDataDoctor(doctorId) {

            ajax.get(`/doctor/getJson`,
                { id: doctorId },
                (response) => {
                    if (response.status) {
                        const obj = response.data;
                        if (obj) {
                            $("#ImgAvt").attr("src", obj.Avatar);
                            $(".link-to-detail-doctor").attr("href", `/doctor/detail?id=${obj.Id}`);
                            $("#doctor-name").text(obj.Name);
                            $("#doctor-id").val(obj.Id);
                            $("#doctor-address").text(obj.Address);


                            $("#exampleModal").modal('show');
                        }
                    }
                },
                (jqXhr, textStatus) => {
                    const mess = `Request failed: ${textStatus}`;
                    Lobibox.alert("error", {
                        msg: "Vui lòng đăng nhập"
                    });
                }
            );
        }

        function bookNow(doctorId) {
            getDataDoctor(doctorId);
        }

        function saveBooking() {
            $("#saveBooking").prop('disabled', true);


            var formData = new FormData(document.getElementById('form-book-doctor'));
            ajax.createOrUpdate(`/doctor/book`,
                formData,
                (response) => {
                    if (response.status) {
                        Lobibox.alert("success", {
                            msg: response.mess
                        });

                    } else {
                        Lobibox.alert("error", {
                            msg: response.mess
                        });
                    }

                    $("#saveBooking").prop('disabled', false);
                },
                (jqXhr, textStatus) => {
                    const mess = `Request failed: ${textStatus}`;
                    Lobibox.alert("error", {
                        msg: mess
                    });
                    $("#saveBooking").prop('disabled', false);
                }
            );
        }

        function pickNumber() {

            $('#pickNumber').modal('show');
        }


        // Populate faculty dropdown
        var facultyDropdown = $('#facultyDropdown');
        faculties.forEach(function (faculty) {
            facultyDropdown.append($('<option>').text(faculty).val(faculty));
        });

        function savePickNumber(roomId) {
            $("#savePickNumber").prop('disabled', true);

            // Lấy giá trị của checkbox và các trường khác
            var isRevisit = $('#revisitCheckbox').is(':checked');
            var symptoms = $('#symptomsDropdown').val();
            var selectedRoom = $('#availableRooms').text();

            var formData = new FormData(document.getElementById('form-pick-number'));
            formData.append('isRevisit', isRevisit);
            formData.append('symptoms', symptoms);
            formData.append('rooms', selectedRoom);  // Gửi tên phòng
            formData.append('roomId', roomId);  // Gửi roomId

            // Log formData để kiểm tra giá trị
            console.log('FormData contents:');
            formData.forEach((value, key) => {
                console.log(`${key}: ${value}`);
            });

            // Gửi yêu cầu AJAX
            ajax.createOrUpdate(`/register/pick`, formData, (response) => {
                if (response.status) {
                    localStorage.setItem('nextNumber', response.nextNumber);

                    Lobibox.alert("success", {
                        msg: response.mess,
                        callback: function () {
                            $('.next-number').html(response.nextNumber);
                            $('#pickNumber').modal('hide');
                        }
                    });
                } else {
                    Lobibox.alert("error", {
                        msg: response.mess
                    });
                }

                $("#savePickNumber").prop('disabled', false);
            }, (jqXhr, textStatus) => {
                
                $("#savePickNumber").prop('disabled', false);
            });
        }



        // When the page loads, set the next number from sessionStorage to the label
        $(document).ready(function () {
            var nextNumber = localStorage.getItem('nextNumber');
            if (nextNumber) {
                $('#nextNumberLabel').text(nextNumber); // Update the label with the next number
            } else {
                $('#nextNumberLabel').text(''); // Display a default message if no number is found
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            // Tất cả triệu chứng được hiển thị
            var symptomsDropdown = $('#symptomsDropdown');

            // Lấy tất cả triệu chứng từ tất cả các khoa
            $.ajax({
                url: '/register/GetAllSymptoms',  // Cần thêm action này trong controller
                type: 'GET',
                success: function (response) {
                    if (response.status) {
                        symptomsDropdown.empty();
                        symptomsDropdown.append($('<option>').text('Chọn triệu chứng').val(''));

                        response.symptoms.forEach(function (symptom) {
                            symptomsDropdown.append($('<option>').text(symptom).val(symptom));
                        });
                    }
                }
            });

            // Xử lý sự kiện khi chọn triệu chứng
            symptomsDropdown.change(function () {
                var selectedSymptom = $(this).val();

                if (selectedSymptom) {
                    $.ajax({
                        url: '/register/GetFacultyBySymptom',
                        type: 'GET',
                        data: { symptom: selectedSymptom },
                        success: function (response) {
                            if (response.status) {
                                // Hiển thị tên khoa
                                $('#selectedFaculty').text(response.faculty);

                                // Xử lý hiển thị phòng
                                var roomsDiv = $('#availableRooms');
                                var roomText = "";
                                var roomId = null; // Biến để lưu roomId

                                if (response.rooms && response.rooms.length > 0) {
                                    response.rooms.forEach(function (room, index) {
                                        roomText += room.Description;
                                        if (index < response.rooms.length - 1) {
                                            roomText += ", ";
                                        }
                                        // Lấy roomId từ phòng đầu tiên (hoặc theo logic của bạn)
                                        if (index === 0) {
                                            roomId = room.Id;
                                        }
                                    });
                                    roomsDiv.html(roomText);
                                } else {
                                    roomsDiv.html('<span class="text-warning">Hiện chưa có phòng khám cho khoa này</span>');
                                }

                                // Lưu roomId vào FormData để gửi cùng dữ liệu khi bốc số
                                $('#savePickNumber').on('click', function () {
                                    savePickNumber(roomId); // Gọi hàm savePickNumber với roomId
                                });
                            }
                        }
                    });
                } else {
                    $('#selectedFaculty').text('');
                    $('#availableRooms').text('');
                }
            });

        });
    </script>

    <script>
        $(document).ready(function () {
            // Bắt sự kiện thay đổi của checkbox
            $('#revisitCheckbox').on('change', function () {
                if ($(this).is(':checked')) {
                    // Disable dropdown và làm sạch giá trị
                    $('#symptomsDropdown').prop('disabled', true).val('');
                    // Làm sạch và hiển thị phần Khoa phụ trách
                    $('#selectedFaculty').text('');
                    $('#availableRooms').text('');
                    $('.examination').css('display', 'block');
                } else {
                    // Enable dropdown
                    $('#symptomsDropdown').prop('disabled', false);
                    $('#symptomsDropdown').val('');
                    // Ẩn phần Khoa phụ trách
                    $('#selectedFaculty').text('');
                    $('#availableRooms').text('');
                    $('.examination').css('display', 'none');
                }
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            var PatientFacultyDropdown = $('#PatientFacultyDropdown');
            var availableRoomsDiv = $('#availableRooms'); // Element to display the room

            // Fetch faculties and populate dropdown
            $.ajax({
                url: '/register/GetPatientFaculty',
                type: 'GET',
                success: function (response) {
                    if (response.status) {
                        PatientFacultyDropdown.empty();
                        PatientFacultyDropdown.append(
                            $('<option>').text('Chọn khoa tái khám').val('')
                        );

                        response.faculties.forEach(function (faculty) {
                            PatientFacultyDropdown.append(
                                $('<option>')
                                    .text(faculty.FacultyName)
                                    .val(faculty.FacultyId)
                                    .data('doctor', { id: faculty.DoctorId, name: faculty.DoctorName })
                            );
                        });
                    } else {
                        console.error('Không lấy được dữ liệu khoa.');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Lỗi khi gọi API:', error);
                }
            });

            // Attach change event to the dropdown
            PatientFacultyDropdown.on('change', function () {
                var selectedOption = $(this).find(':selected');
                var doctorData = selectedOption.data('doctor');

                if (doctorData) {
                    console.log('Selected Faculty Doctor:', doctorData);

                    // Call GetRoomByDoctor API to fetch room based on doctor ID
                    $.ajax({
                        url: '/register/GetRoomByDoctor',
                        type: 'GET',
                        data: { doctorId: doctorData.id },
                        success: function (response) {
                            if (response.status) {
                                var room = response.roomPatient;

                                // Check if room exists and display it
                                if (room) {
                                    console.log("roomId: ", room.Id);
                                    availableRoomsDiv.text(room.Description + ' ' + '|' + ' ' + "Bác sĩ: " + doctorData.name || 'Phòng không có tên');

                                    // Lưu roomId vào FormData khi bốc số
                                    $('#savePickNumber').on('click', function () {
                                        savePickNumber(room.Id); // Gọi hàm savePickNumber với roomId
                                    });
                                } else {
                                    availableRoomsDiv.text('Không có phòng tương ứng.');
                                }
                            } else {
                                console.error('Không tìm thấy phòng cho bác sĩ này.');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Lỗi khi gọi API GetRoomByDoctor:', error);
                        }
                    });
                } else {
                    availableRoomsDiv.text('Chọn khoa tái khám để xem phòng.');
                }
            });

        });

    </script>

    <script>
        $(document).ready(function () {
            function toggleSaveButton() {
                const isSymptomsSelected = $('#symptomsDropdown').val() !== null && $('#symptomsDropdown').val() !== '';
                const isRevisitChecked = $('#revisitCheckbox').is(':checked');
                const isPatientFacultySelected = $('#PatientFacultyDropdown').val() !== null && $('#PatientFacultyDropdown').val() !== '';

                // Điều kiện để vô hiệu hóa nút
                if (isRevisitChecked && isPatientFacultySelected) {
                    $('#savePickNumber').prop('disabled', false); 
                } else if (isSymptomsSelected) {
                    $('#savePickNumber').prop('disabled', false); 
                } else {
                    $('#savePickNumber').prop('disabled', true); 
                }
            }

            // Gán sự kiện thay đổi cho các phần tử liên quan
            $('#symptomsDropdown, #revisitCheckbox, #PatientFacultyDropdown').on('change', toggleSaveButton);

            // Kiểm tra trạng thái ban đầu khi tải trang
            $('#savePickNumber').prop('disabled', true); // Disable mặc định
            toggleSaveButton(); // Gọi để cập nhật chính xác
        });
    </script>

</body>
